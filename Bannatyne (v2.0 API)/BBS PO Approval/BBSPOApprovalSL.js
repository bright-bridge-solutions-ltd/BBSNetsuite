/**
 * @NApiVersion 2.x
 * @NScriptType Suitelet
 * @NModuleScope SameAccount
 */
define(['N/record', 'N/email'],
function(record, email) {
   
    /**
     * Definition of the Suitelet script trigger point.
     *
     * @param {Object} context
     * @param {ServerRequest} context.request - Encapsulation of the incoming request
     * @param {ServerResponse} context.response - Encapsulation of the Suitelet response
     * @Since 2015.2
     */
    function onRequest(context) {
    	
    	// retrieve parameters that were passed from the client script
    	var recordID = context.request.parameters.id;
    		recordID = parseInt(recordID); // use parseInt to convert to a number
    	
    	var rejectionReason = context.request.parameters.reason;
    	
    	// load the PO record
    	var poRecord = record.load({
    		type: record.Type.PURCHASE_ORDER,
    		id: recordID,
    		isDynamic: true
    	});
    			
    	// get field values from the poRecord object
    	var tranID = poRecord.getValue({
    		fieldId: 'tranid'
    	});
    	
    	var employee = poRecord.getValue({
    		fieldId: 'employee'
    	});
    	
    	var employeeText = poRecord.getText({
    		fieldId: 'employee'
    	});
    			
    	var nextApprover = poRecord.getValue({
    		fieldId: 'nextapprover'
    	});
    			
    	var nextApproverText = poRecord.getText({
    		fieldId: 'nextapprover'
    	});
    	
    	try
    		{
    			// set the 'Rejection Reason' field on the poRecord object using the rejectionReason variable
    			poRecord.setValue({
    				fieldId: 'custbody_bbs_rejection_reason',
    				value: rejectionReason
    			});
    			
    			// set the 'PO Approval Workflow State' field on the poRecord object to 'Rejected: Enter Rejection Reason'
    			poRecord.setValue({
    				fieldId: 'custbody_bbs_po_approval_state',
    				value: 'Rejected: Enter Rejection Reason'
    			});
    			
    			// save the poRecord object
    			poRecord.save();
    			
    			log.audit({
    				title: 'PO Record Updated',
    				details: recordID
    			});
    		}
    	catch(e)
    		{
    			log.error({
    				title: 'Error Updating PO Record',
    				details: 'Record ID: ' + recordID + '<br>Error: ' + e
    			});
    		}
    	
    	// define email subject and body
    	var emailSubject = 'PO (' + tranID + ') Has Been Rejected';
    	
    	var emailBody = 'Dear ' + employeeText;
    	emailBody += '<br /><br />';
    	emailBody += 'Your purchase order ' + tranID + ' has been rejected by ' + nextApproverText + '.'
    	emailBody += '<br /><br />';
    	emailBody += '<b>Rejection Reason: </b>' + rejectionReason;
    	emailBody += '<br /><br />';
    	emailBody += 'Please make the necessary changes and resubmit for approval.'
    	emailBody += '<br /><br />';	
    	emailBody += '<font size="1">this alert has been generated by the script &#39;BBS PO Approval SL&#39;</font>';
    	
    	try
    		{
	    		// send rejection email to the employee
	        	email.send({
	        		author: nextApprover,
	        		recipients: employee,
	        		subject: emailSubject,
	        		body: emailBody,
	        		relatedRecords: {
	        			transactionId: recordID
	        		}
	        	});
    		}
    	catch(e)
    		{
	    		log.error({
					title: 'Error Sending Email',
					details: 'PO Record ID: ' + recordID + '<br>Error: ' + e
				});
    		}
    }

    return {
        onRequest: onRequest
    };
    
});
